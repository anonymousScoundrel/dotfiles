#!/bin/sh
# Because git commands are hard to remember.
# Dumps the git archive as a tarball in the current directory.
# Unless it doesn't. In which case it throws a lot of errors.

# test branch var to make sure its not blank else exit with error
git rev-parse 2> /dev/null

if [ $? -eq 0 ]
then
    # Check that current directory is tracked and not ignored
    if git clean -xnd $PWD | grep 'Would remove \./' > /dev/null
    then
        echo "$PWD is not tracked or ignored."
        exit 1
    else
        BRCH=$( git branch 2> /dev/null | sed -r 's/\*\s//' )
        echo "Archiving $BRCH branch to $PWD/git-archive-$BRCH.tar.gz"
        git archive --format=tar.gz $BRCH --output git-archive-$BRCH.tar.gz
        exit 0
    fi
else
    echo "No git repository detected."
    exit 1
fi

